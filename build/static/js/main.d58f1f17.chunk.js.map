{"version":3,"sources":["components/Fonts.js","reducers/userReducer.js","services/userService.js","components/Login.js","components/ChatMessage.js","components/ChatRoom.js","components/Emoji.js","services/chatRoomService.js","components/Home.js","components/ThemeToggle.js","components/Header.js","components/Footer.js","components/Layout.js","components/NotFound.js","components/App.js","reducers/index.js","theme.js","index.js"],"names":["Fonts","styles","userSlice","createSlice","name","initialState","logged","token","reducers","loginAction","state","action","payload","logoutAction","actions","BASE_URL","process","login","username","password","a","axios","post","response","console","log","data","getUsers","localStorage","getItem","get","headers","Authorization","mapDispatchToProps","connect","user","props","history","useHistory","useState","email","setEmail","setPassword","dispatch","useDispatch","handleSubmit","event","preventDefault","setItem","access_token","push","bgColor","useColorModeValue","align","justifyContent","maxW","maxH","p","rounded","m","boxShadow","maxWidth","borderWidth","borderRadius","textAlign","my","onSubmit","isRequired","type","placeholder","onChange","currentTarget","value","mt","width","color","ChatMessage","display","mr","content","fontSize","alignSelf","aria-label","icon","DragHandle","ChatRoom","messages","setMessages","bottomRef","useRef","executeScroll","current","scrollIntoView","useEffect","id","datetime","Date","user_id","setTimeout","sendMessage","alert","flexDirection","borderTopRadius","alignItems","height","size","src","as","overflowY","css","background","map","message","ref","spacing","pointerEvents","children","Email","focusBorderColor","onKeyPress","key","borderBottomLeftRadius","borderBottomRightRadius","colorScheme","Chat","onClick","Emoji","className","role","label","aria-hidden","symbol","getRooms","Home","users","setUsers","rooms","setRooms","usersResponse","userList","roomsResponse","roomList","flexGrow","maxHeight","room","border","borderColor","href","ThemeToggle","useColorMode","colorMode","toggleColorMode","style","py","Moon","Sun","borderBottomRadius","outline","alt","htmlHeight","htmlWidth","removeItem","Footer","h","Layout","mx","backgroundImage","direction","xl","flex","flexShrink","NotFound","checkAuthentication","chatRoomMatch","useRouteMatch","privateRoomMatch","isPrivateRoom","path","private","Number","params","to","exact","combineReducers","userReducer","theme","extendTheme","fonts","heading","body","config","initialColorMode","useSystemColorMode","store","configureStore","reducer","rootReducer","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.d58f1f17.chunk.js","sourcesContent":["import { Global } from \"@emotion/react\";\n\nconst Fonts = () => (\n  <Global\n    styles={`\n      /* Copied from https://fonts.googleapis.com/css2?family=Open+Sans:wght@700&family=Roboto+Mono&display=swap */\n      /* latin-ext */\n      @font-face {\n        font-family: 'Open Sans';\n        font-style: normal;\n        font-weight: 700;\n        font-display: swap;\n        src: url(https://fonts.gstatic.com/s/opensans/v18/mem5YaGs126MiZpBA-UN7rgOXOhpOqc.woff2) format('woff2');\n        unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n      }\n      /* latin */\n      @font-face {\n        font-family: 'Open Sans';\n        font-style: normal;\n        font-weight: 700;\n        font-display: swap;\n        src: url(https://fonts.gstatic.com/s/opensans/v18/mem5YaGs126MiZpBA-UN7rgOUuhp.woff2) format('woff2');\n        unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n      }\n      /* latin-ext */\n      @font-face {\n        font-family: 'Roboto Mono';\n        font-style: normal;\n        font-weight: 400;\n        font-display: swap;\n        src: url(https://fonts.gstatic.com/s/robotomono/v13/L0xuDF4xlVMF-BfR8bXMIhJHg45mwgGEFl0_3vq_SuW4Ep0.woff2) format('woff2');\n        unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n      }\n      /* latin */\n      @font-face {\n        font-family: 'Roboto Mono';\n        font-style: normal;\n        font-weight: 400;\n        font-display: swap;\n        src: url(https://fonts.gstatic.com/s/robotomono/v13/L0xuDF4xlVMF-BfR8bXMIhJHg45mwgGEFl0_3vq_ROW4.woff2) format('woff2');\n        unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n      }\n      `}\n  />\n);\n\nexport default Fonts;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  logged: false,\n  token: null\n};\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: initialState,\n  reducers: {\n    loginAction(state, action) {\n      const { token } = action.payload;\n      state.logged = true;\n      state.token = token;\n    },\n    logoutAction(state, action) {\n      state.logged = false;\n      state.token = null\n    }\n  }\n});\n\nexport const { loginAction, logoutAction } = userSlice.actions;\n\nexport default userSlice.reducer;\n","import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_SC_BASE_URL;\n\nconst login = async (username, password) => {\n  try {\n    let response = await axios.post(`${BASE_URL}/login`, {\n      username: username,\n      password: password,\n    });\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst getUsers = async () => {\n  let token = localStorage.getItem(\"token\");\n\n  try {\n    let response = await axios.get(`${BASE_URL}/user`, {\n      headers: {\n        Authorization: `JWT ${token}`,\n      },\n    });\n    console.log(response);\n    console.log(response.data)\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport { login, getUsers };\n","import React, { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory,\n} from \"react-router-dom\";\nimport {\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  FormHelperText,\n  Flex,\n  Box,\n  Heading,\n  Input,\n  Button,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { connect, useDispatch } from 'react-redux'\n\nimport { loginAction } from \"../reducers/userReducer\";\nimport { login } from \"../services/userService\";\n\nfunction Login(props) {\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch()\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    console.log(`Email: ${email} & Password: ${password}`);\n    let response = await login(email, password);\n    localStorage.setItem('token', response.access_token)\n    dispatch(loginAction({'token': response.access_token}))\n    history.push(\"/\");\n  };\n\n  const bgColor = useColorModeValue(\"white\", \"gray.800\");\n\n  return (\n    <Flex\n      align=\"center\"\n      justifyContent=\"center\"\n      maxW=\"100%\"\n      maxH=\"100%\"\n      p={10}\n      rounded=\"md\"\n      bgColor={bgColor}\n      m={5}\n      boxShadow=\"md\"\n    >\n      <Box\n        p={8}\n        maxWidth=\"500px\"\n        borderWidth={1}\n        borderRadius={8}\n        boxShadow=\"lg\"\n      >\n        <Box textAlign=\"center\">\n          <Heading>Login</Heading>\n        </Box>\n        <Box my={4} textAlign=\"left\">\n          <form onSubmit={handleSubmit}>\n            <FormControl isRequired>\n              <FormLabel>Username</FormLabel>\n              <Input\n                type=\"text\"\n                placeholder=\"mystery-user-1\"\n                onChange={(event) => setEmail(event.currentTarget.value)}\n              />\n            </FormControl>\n            <FormControl mt={6} isRequired>\n              <FormLabel>Password</FormLabel>\n              <Input\n                type=\"password\"\n                placeholder=\"*******\"\n                onChange={(event) => setPassword(event.currentTarget.value)}\n              />\n            </FormControl>\n            <Button width=\"full\" color=\"teal\" mt={4} type=\"submit\">\n              Sign In\n            </Button>\n          </form>\n        </Box>\n      </Box>\n    </Flex>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = {\n  login,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Flex,\n  Box,\n  Text,\n  Spacer,\n  IconButton,\n  useColorModeValue,\n  Icon,\n} from \"@chakra-ui/react\";\nimport { DragHandleIcon } from \"@chakra-ui/icons\";\n\nfunction ChatMessage(props) {\n  return (\n    <Flex justifyContent={props.justifyContent} width=\"100%\">\n      <Box\n        display=\"flex\"\n        boxShadow=\"md\"\n        bgColor=\"white\"\n        m=\"3\"\n        p=\"3\"\n        borderRadius=\"20px\"\n      >\n        <Text mr={3} p={1}>\n          {props.content}\n        </Text>\n        <Spacer />\n        <Text fontSize=\"xs\" alignSelf=\"flex-end\">\n          12:24\n        </Text>\n      </Box>\n      <IconButton\n        alignSelf=\"center\"\n        color=\"gray.200\"\n        bgColor=\"transparent\"\n        aria-label=\"Options\"\n        icon={<DragHandleIcon />}\n      ></IconButton>\n    </Flex>\n  );\n}\n\nexport default ChatMessage;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport {\n  Flex,\n  Box,\n  Heading,\n  Stack,\n  InputGroup,\n  InputLeftElement,\n  InputRightElement,\n  Input,\n  IconButton,\n  Textarea,\n  ListItem,\n  List,\n  Avatar,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\n\nimport { ChatIcon, EmailIcon } from \"@chakra-ui/icons\";\n\nimport ChatMessage from \"./ChatMessage\";\n\nfunction ChatRoom(props) {\n  const [messages, setMessages] = useState([]);\n  const bottomRef = useRef(null);\n  const executeScroll = () => console.log(\"Scrolling\") && bottomRef.current.scrollIntoView()    \n\n  useEffect(() => {\n    setMessages([\n      { id: 1, content: \"Testing content\", datetime: new Date(), user_id: 1 },\n      { id: 2, content: \"Testing content2\", datetime: new Date(), user_id: 2 },\n      { id: 3, content: \"Testing content3\", datetime: new Date(), user_id: 2 },\n      {\n        id: 4,\n        content:\n          \"Testing long long long long long long long long long long long long long long long long long long long long long long long content4\",\n        datetime: new Date(),\n        user_id: 1,\n      },\n      { id: 5, content: \"Testing content5\", datetime: new Date(), user_id: 1 },\n      { id: 6, content: \"Testing content6\", datetime: new Date(), user_id: 2 },\n      { id: 7, content: \"Testing content7\", datetime: new Date(), user_id: 1 },\n      { id: 8, content: \"Testing content8\", datetime: new Date(), user_id: 1 },\n      { id: 9, content: \"Testing content9\", datetime: new Date(), user_id: 2 },\n      {\n        id: 10,\n        content: \"Testing content10\",\n        datetime: new Date(),\n        user_id: 1,\n      },\n      {\n        id: 11,\n        content: \"Testing content11\",\n        datetime: new Date(),\n        user_id: 1,\n      },\n      {\n        id: 12,\n        content: \"Testing content12\",\n        datetime: new Date(),\n        user_id: 2,\n      },\n      {\n        id: 13,\n        content: \"Testing content13\",\n        datetime: new Date(),\n        user_id: 1,\n      },\n\n      {\n        id: 14,\n        content: \"Testing content14\",\n        datetime: new Date(),\n        user_id: 1,\n      },\n      {\n        id: 15,\n        content: \"Testing content15\",\n        datetime: new Date(),\n        user_id: 2,\n      },\n      {\n        id: 16,\n        content: \"Testing content16\",\n        datetime: new Date(),\n        user_id: 1,\n      },\n\n      {\n        id: 17,\n        content: \"Testing content17\",\n        datetime: new Date(),\n        user_id: 1,\n      },\n      {\n        id: 18,\n        content: \"Testing content18\",\n        datetime: new Date(),\n        user_id: 2,\n      },\n      {\n        id: 19,\n        content: \"Testing content19\",\n        datetime: new Date(),\n        user_id: 1,\n      },\n\n      {\n        id: 20,\n        content: \"Testing content20\",\n        datetime: new Date(),\n        user_id: 1,\n      },\n      {\n        id: 21,\n        content: \"Testing content21\",\n        datetime: new Date(),\n        user_id: 2,\n      },\n      {\n        id: 22,\n        content: \"Testing content22\",\n        datetime: new Date(),\n        user_id: 1,\n      },\n\n      {\n        id: 23,\n        content: \"Testing content23\",\n        datetime: new Date(),\n        user_id: 1,\n      },\n      {\n        id: 24,\n        content: \"Testing content24\",\n        datetime: new Date(),\n        user_id: 2,\n      },\n      {\n        id: 25,\n        content: \"Testing content25\",\n        datetime: new Date(),\n        user_id: 1,\n      },\n    ]);\n    setTimeout(executeScroll, 1000);\n  }, []);\n\n  console.log(props);\n\n  const sendMessage = () => {\n    alert(\"Enter hit! Send!\");\n  };\n\n  const bgColor = useColorModeValue(\"white\", \"gray.800\");\n\n  return (\n    <Flex\n      maxW=\"100%\"\n      maxH=\"100%\"\n      boxShadow=\"sm\"\n      rounded=\"md\"\n      bgColor={bgColor}\n      m={2}\n      flexDirection=\"column\"\n    >\n      <Box\n        display=\"flex\"\n        borderTopRadius=\"md\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        m={0}\n        p={0}\n        bgColor=\"teal\"\n        maxW=\"100%\"\n        height=\"70px\"\n        textAlign=\"center\"\n      >\n        <Avatar\n          size=\"md\"\n          name=\"Dan Abrahmov\"\n          src=\"https://bit.ly/dan-abramov\"\n          mr=\"3\"\n        />\n        <Heading as=\"h4\" size=\"md\" color=\"white\">\n          User\n        </Heading>\n      </Box>\n      <List\n        maxW=\"100%\"\n        height=\"75vh\"\n        overflowY=\"scroll\"\n        bgColor=\"gray.50\"\n        css={{\n          \"::-webkit-scrollbar\": {\n            width: \"5px\",\n            borderRadius: \"10px\",\n          },\n\n          /* Track */\n          \"::-webkit-scrollbar-track\": {\n            background: \"#f1f1f1\",\n            borderRadius: \"10px\",\n          },\n\n          /* Handle */\n          \"::-webkit-scrollbar-thumb\": {\n            background: \"#888\",\n            borderRadius: \"10px\",\n          },\n\n          /* Handle on hover */\n          \"::-webkit-scrollbar-thumb:hover\": {\n            background: \"#555\",\n          },\n        }}\n      >\n        {messages.map((message) => {\n          return (\n            <ListItem\n              width=\"100%\"\n              key={message.id}\n              justifyContent={message.user_id === 1 ? \"flex-end\" : \"flex-start\"}\n            >\n              <ChatMessage\n                content={message.content}\n                justifyContent={\n                  message.user_id === 1 ? \"flex-end\" : \"flex-start\"\n                }\n              />\n            </ListItem>\n          );\n        })}\n        <ListItem ref={bottomRef}>Bottom</ListItem>\n      </List>\n      <Box maxW=\"100%\" height=\"40px\">\n        <Stack spacing={4}>\n          <InputGroup>\n            <InputLeftElement\n              pointerEvents=\"none\"\n              children={<EmailIcon color=\"gray.300\" />}\n            />\n            <Input\n              size=\"md\"\n              placeholder=\"Message\"\n              focusBorderColor=\"teal.500\"\n              onKeyPress={(event) => event.key === \"Enter\" && sendMessage()}\n            />\n            <InputRightElement>\n              <IconButton\n                borderTopRadius=\"0px\"\n                borderBottomLeftRadius=\"0px\"\n                borderBottomRightRadius=\"md\"\n                colorScheme=\"teal\"\n                aria-label=\"Send\"\n                icon={<ChatIcon />}\n                onClick={() => sendMessage()}\n              />\n            </InputRightElement>\n          </InputGroup>\n        </Stack>\n      </Box>\n    </Flex>\n  );\n}\n\nexport default ChatRoom;\n","import React from \"react\";\n\nconst Emoji = (props) => (\n  <span\n    className=\"emoji\"\n    role=\"img\"\n    aria-label={props.label ? props.label : \"\"}\n    aria-hidden={props.label ? \"false\" : \"true\"}\n  >\n    {props.symbol}\n  </span>\n);\nexport default Emoji;\n","import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_SC_BASE_URL;\n\nconst getRooms = async () => {\n  let token = localStorage.getItem(\"token\");\n\n  try {\n    let response = await axios.get(`${BASE_URL}/chatroom`, {\n      headers: {\n        Authorization: `JWT ${token}`,\n      },\n    });\n    console.log(response);\n    console.log(response.data)\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport { getRooms };\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Flex,\n  List,\n  Button,\n  ListItem,\n  Box,\n  Spacer,\n  Heading,\n  Text,\n  Center,\n  Divider,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\n\nimport Emoji from \"./Emoji\";\n\nimport { getUsers } from \"../services/userService\";\nimport { getRooms } from \"../services/chatRoomService\";\n\nfunction Home(props) {\n  const [users, setUsers] = useState([]);\n  const [rooms, setRooms] = useState([]);\n\n  useEffect(async () => {\n    let usersResponse = await getUsers();\n    let userList = usersResponse.data;\n\n    let roomsResponse = await getRooms();\n    let roomList = roomsResponse.data\n\n    await setUsers(userList);\n    await setRooms(roomList);\n  }, []);\n\n  const bgColor = useColorModeValue(\"white\", \"gray.800\");\n  const scrollbarColor = useColorModeValue(\"#123123\", \"#643345\");\n\n  return (\n    <Flex\n      maxW=\"100%\"\n      maxH=\"100%\"\n      p={2}\n      boxShadow=\"sm\"\n      rounded=\"md\"\n      bgColor={bgColor}\n      m={2}\n    >\n      <Box flexGrow=\"1\" textAlign=\"center\">\n        <Heading as=\"h3\" size=\"lg\">\n          <Emoji symbol=\"👥\" /> Join a room!\n        </Heading>\n        <List\n          maxHeight=\"80vh\"\n          overflowY=\"scroll\"\n          spacing={3}\n          m={1}\n          p={3}\n          css={{\n            \"::-webkit-scrollbar\": {\n              width: \"5px\",\n              borderRadius: \"10px\",\n            },\n\n            /* Track */\n            \"::-webkit-scrollbar-track\": {\n              background: \"#f1f1f1\",\n              borderRadius: \"10px\",\n            },\n\n            /* Handle */\n            \"::-webkit-scrollbar-thumb\": {\n              background: \"#888\",\n              borderRadius: \"10px\",\n            },\n\n            /* Handle on hover */\n            \"::-webkit-scrollbar-thumb:hover\": {\n              background: \"#555\",\n            },\n          }}\n        >\n          {rooms.map((room) => {\n            return (\n              <ListItem key={room.id}>\n                <Button\n                  size=\"md\"\n                  height=\"48px\"\n                  width=\"100%\"\n                  border=\"2px\"\n                  borderColor=\"teal\"\n                  as=\"a\"\n                  href={\"/chatroom/\" + room.id}\n                >\n                  {room.name}\n                </Button>\n              </ListItem>\n            );\n          })}\n        </List>\n      </Box>\n      <Box flexGrow=\"1\" textAlign=\"center\">\n        <Heading as=\"h3\" size=\"lg\">\n          <Emoji symbol=\"🤫\" /> Private chat!\n        </Heading>\n        <List\n          maxHeight=\"80vh\"\n          overflowY=\"scroll\"\n          spacing={3}\n          m={1}\n          p={3}\n          css={{\n            \"::-webkit-scrollbar\": {\n              width: \"5px\",\n              borderRadius: \"10px\",\n            },\n\n            /* Track */\n            \"::-webkit-scrollbar-track\": {\n              background: \"#f1f1f1\",\n              borderRadius: \"10px\",\n            },\n\n            /* Handle */\n            \"::-webkit-scrollbar-thumb\": {\n              background: \"#888\",\n              borderRadius: \"10px\",\n            },\n\n            /* Handle on hover */\n            \"::-webkit-scrollbar-thumb:hover\": {\n              background: \"#555\",\n            },\n          }}\n        >\n          {users.map((user) => {\n            return (\n              <ListItem key={user.id}>\n                <Button\n                  size=\"md\"\n                  height=\"48px\"\n                  width=\"100%\"\n                  border=\"2px\"\n                  borderColor=\"teal\"\n                  as=\"a\"\n                  href={\"/chatroom/private/\" + user.id}\n                >\n                  {user.username}\n                </Button>\n              </ListItem>\n            );\n          })}\n        </List>\n      </Box>\n    </Flex>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { useColorMode, Box, IconButton } from \"@chakra-ui/react\";\nimport { MoonIcon, SunIcon } from \"@chakra-ui/icons\";\n\nfunction ThemeToggle() {\n  const { colorMode, toggleColorMode } = useColorMode();\n  return (\n    <div style={{display:\"show\"}}>\n    <Box textAlign=\"right\" py={4} mr={12}>\n      <IconButton\n        icon={colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\n        onClick={toggleColorMode}\n      />\n    </Box>\n    </div>\n  );\n}\n\nexport default ThemeToggle;\n","import React, { useEffect } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Flex, Box, Heading, Spacer, Button } from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\nimport { Image, useColorModeValue } from \"@chakra-ui/react\";\nimport ThemeToggle from \"./ThemeToggle\";\nimport { logoutAction } from \"../reducers/userReducer\";\n\nfunction Header(props) {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const bgColor = useColorModeValue(\"white\", \"gray.800\");\n\n  const home = () => {\n    history.push(\"/\");\n  };\n\n  const logout = () => {\n    dispatch(logoutAction());\n    localStorage.removeItem(\"token\");\n    history.push(\"/login\");\n  };\n\n  const login = () => {\n    history.push(\"/login\");\n  };\n\n  return (\n    <Flex\n      align=\"center\"\n      p={2}\n      boxShadow=\"md\"\n      borderBottomRadius=\"md\"\n      bgColor={bgColor}\n    >\n      <Box as=\"button\" p=\"2\" onClick={() => home()} outline=\"0\">\n        <Image\n          src=\"/logo_200.png\"\n          alt=\"Secret Chat\"\n          htmlHeight=\"100px\"\n          htmlWidth=\"150px\"\n        />\n      </Box>\n      <Spacer />\n      {props.user.logged ? (\n        <Button mr={4} colorScheme=\"teal\" onClick={() => logout()}>\n          Log out\n        </Button>\n      ) : (\n        <Button mr={4} colorScheme=\"teal\" onClick={() => login()}>\n          Log in\n        </Button>\n      )}\n      <ThemeToggle />\n    </Flex>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = {\n  logoutAction,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React, { useEffect } from \"react\";\nimport { Center, Flex } from \"@chakra-ui/react\";\nimport { Text, useColorModeValue } from \"@chakra-ui/react\";\n\nfunction Footer(props) {\n  const bgColor = useColorModeValue(\"teal\", \"gray.800\")\n\n  return (\n    <>\n      <Center\n        bgColor={bgColor}\n        //bgGradient={bgGradient}\n        h=\"60px\"\n        color=\"white\"\n        mt=\"auto\"\n        borderTopRadius=\"md\"\n        boxShadow=\"md\"\n      >\n        <Text fontSize=\"lg\">Made with 💖 from Helsinki</Text>\n      </Center>\n    </>\n  );\n}\n\nexport default Footer;\n","import React, { useEffect } from \"react\";\nimport {\n  Flex,\n  Container,\n  Box,\n  Spacer,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\n\nfunction Layout(props) {\n  const bgColor = useColorModeValue(\"gray.200\", \"gray.900\")\n  const backgroundImage = \"url('/bg.svg')\"\n  \n  return (\n    <>\n      <Box\n        width=\"100vw\"\n        height=\"100vh\"\n        maxWidth=\"100vw\"\n        maxHeight=\"100vh\"\n\n        mx=\"auto\"\n        bgColor={bgColor}\n        backgroundImage={backgroundImage}\n      >\n        <Flex\n          direction=\"column\"\n          maxW={{ xl: \"1200px\" }}\n          height=\"100%\"\n          m=\"0 auto\"\n          {...props}\n        >\n          <Header />\n          <Box flex=\"1 0 auto\">{props.children}</Box>\n          <Footer flexShrink=\"0\" />\n        </Flex>\n      </Box>\n    </>\n  );\n}\n\nexport default Layout;\n","import React, { useEffect } from \"react\";\nimport {\n  Flex,\n  Center,\n  Heading,\n  Image,\n  Text,\n  useColorModeValue,\n} from \"@chakra-ui/react\";\n\nfunction NotFound(props) {\n  const bgColor = useColorModeValue(\"white\", \"gray.800\");\n\n  return (\n    <Flex\n      align=\"center\"\n      justifyContent=\"center\"\n      maxW=\"100%\"\n      maxH=\"100%\"\n      p={2}\n      boxShadow=\"sm\"\n      rounded=\"md\"\n      bgColor={bgColor}\n      m={2}\n    >\n      <div>\n        <Image ></Image>\n        <Text fontSize=\"3xl\">404 Not found</Text>\n      </div>\n    </Flex>\n  );\n}\n\nexport default NotFound;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { loginAction } from \"../reducers/userReducer\";\nimport Login from \"./Login\";\nimport ChatRoom from \"./ChatRoom\";\nimport Home from \"./Home\";\nimport Layout from \"./Layout\";\nimport NotFound from \"./NotFound\";\n\nfunction App(props) {\n  const dispatch = useDispatch();\n\n  const checkAuthentication = () => {\n    if (props.user.token || localStorage.getItem(\"token\")) {\n      if (!props.user.token) {\n        dispatch(loginAction({ token: localStorage.getItem(\"token\") }));\n      } else if (!localStorage.getItem(\"token\")) {\n        localStorage.setItem(\"token\", props.user.token);\n      }\n      return true;\n    }\n    return false;\n  };\n\n  const chatRoomMatch = useRouteMatch(\"/chatroom/:id\");\n  const privateRoomMatch = useRouteMatch(\"/chatroom/private/:id\");\n  const isChatRoom = chatRoomMatch ? true : false;\n  const isPrivateRoom = privateRoomMatch ? true : false;\n\n  return (\n    <>\n      <Switch>\n        <Route path={[\"/chatroom/:id\", \"/chatroom/private/:id\"]}>\n          {() =>\n            checkAuthentication() ? (\n              <Layout>\n                <ChatRoom\n                  private={isPrivateRoom}\n                  id={\n                    isPrivateRoom\n                      ? Number(privateRoomMatch.params.id)\n                      : Number(chatRoomMatch.params.id)\n                  }\n                />\n              </Layout>\n            ) : (\n              <Redirect to=\"/login\" />\n            )\n          }\n        </Route>\n        <Route path=\"/login\">\n          {() =>\n            checkAuthentication() ? (\n              <Redirect to=\"/\" />\n            ) : (\n              <Layout>\n                <Login />\n              </Layout>\n            )\n          }\n        </Route>\n        <Route exact path=\"/\">\n          {() =>\n            checkAuthentication() ? (\n              <Layout>\n                <Home />\n              </Layout>\n            ) : (\n              <Redirect to=\"/login\" />\n            )\n          }\n        </Route>\n        <Route>\n          <Layout>\n            <NotFound />\n          </Layout>\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n  };\n};\n\nexport default connect(mapStateToProps, null)(App);\n","import { combineReducers } from 'redux'\n\nimport userReducer from './userReducer'\n\nexport default combineReducers({\n    user: userReducer,\n})\n","import { extendTheme } from \"@chakra-ui/react\";\nimport { mode } from \"@chakra-ui/theme-tools\";\n\nconst config = {\n  initialColorMode: \"light\",\n  useSystemColorMode: false,\n};\n\nconst theme = extendTheme({\n  fonts: {\n    heading: \"Open Sans\",\n    body: \"Roboto Mono\",\n  },\n  config,\n});\n\n\nexport default theme","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport {\n  ChakraProvider,\n  ColorModeScript,\n  ColorModeProvider,\n} from \"@chakra-ui/react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { mode } from \"@chakra-ui/theme-tools\";\nimport Fonts from \"./components/Fonts\";\nimport App from \"./components/App\";\nimport rootReducer from \"./reducers\";\nimport { extendTheme } from \"@chakra-ui/react\";\nimport \"./index.css\";\nimport theme from \"./theme\";\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(\n  <ChakraProvider theme={theme}>\n    <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n    <Fonts />\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </ChakraProvider>,\n  rootElement\n);\n"],"sourceRoot":""}